{"data":{"site":{"siteMetadata":{"title":"Takumon Blog","author":"Takuto Inoue"}},"markdownRemark":{"html":"<p><img src=\"/thumbnail/2019/02/mutliple-validation-errors-in-aws-appsync.png\" alt=\"mutliple-validation-errors-in-aws-appsync\"></p>\n<h2 id=\"なにこれ\"><a href=\"#%E3%81%AA%E3%81%AB%E3%81%93%E3%82%8C\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>なにこれ</h2>\n<p>AppSyncのリゾルバーでDynamoDBのデータを更新する場合、更新処理の前に入力チェックは必ず実施すると思います。\nこの時、入力チェックエラーを見つけた時点で1つのエラーメッセージを返すより、\nすべてのチェック実施後にまとめてエラーメッセージを返してあげたほうが、AppSyncの呼び出し側としては助かります。\nただ、このやり方は調べてもあまり出てきませんでした。そのため本記事で紹介します。</p>\n<h2 id=\"結論\"><a href=\"#%E7%B5%90%E8%AB%96\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論</h2>\n<p>たとえば、人(ID、名前、組織名)を更新する場合</p>\n<div class=\"gatsby-code-title\">人(ID、名前、組織名)を更新するmutation</div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">mutation</span> <span class=\"token punctuation\">{</span>\n  updatePerson <span class=\"token punctuation\">(</span><span class=\"token attr-name\">input</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    id\n    name\n    organizationName\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    person <span class=\"token punctuation\">{</span>\n      id\n      name\n      organizationName\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<p>以下のようにリクエストマッピングテンプレートのVTLを記述します。</p>\n<div class=\"gatsby-code-title\">複数エラーメッセージを返すVTL</div>\n<div class=\"gatsby-highlight\" data-language=\"velocity\"><pre class=\"language-velocity\"><code class=\"language-velocity\"><span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span>$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名前は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></span>\n</span><span class=\"token directive\"><span class=\"token keyword\">#end</span></span> \n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></span>)\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名前は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></span>\n</span><span class=\"token directive\"><span class=\"token keyword\">#end</span></span>\n\n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span>$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"組織名は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"organizationName\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">)</span></span>\n</span><span class=\"token directive\"><span class=\"token keyword\">#end</span></span> \n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></span>)\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"組織名は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"organizationName\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">)</span></span>\n</span><span class=\"token directive\"><span class=\"token keyword\">#end</span></span>\n\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>outErrors<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span>\n</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token directive\"><span class=\"token keyword\">#return</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>outErrors</span><span class=\"token punctuation\">)</span></span>\n</span><span class=\"gatsby-highlight-code-line\"><span class=\"token directive\"><span class=\"token keyword\">#end</span></span>\n</span>\n{\n  \"operation\" : \"PutItem\",\n  \"key\" : {\n    \"id\" : { \"S\" : \"<span class=\"token variable\">$<span class=\"token punctuation\">{</span>ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\" }\n  },\n  \"condition\" : {\n    \"expression\" : \"attribute_exists(id)\"\n  },\n  \"attributeValues\" : <span class=\"token variable\">$util<span class=\"token punctuation\">.</span>dynamodb<span class=\"token punctuation\">.</span><span class=\"token function\">toMapValuesJson</span><span class=\"token punctuation\">(</span>$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">)</span></span>\n}</code></pre></div>\n<br/>\n<h2 id=\"実際どのようなレスポンスが返ってくるか\"><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%A9%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%81%8C%E8%BF%94%E3%81%A3%E3%81%A6%E3%81%8F%E3%82%8B%E3%81%8B\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>実際どのようなレスポンスが返ってくるか</h2>\n<p>以下のmutationを発行してみると...</p>\n<div class=\"gatsby-code-title\">複数の入力チェックエラーになるようなmutation</div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">mutation</span> <span class=\"token punctuation\">{</span>\n  updatePerson<span class=\"token punctuation\">(</span><span class=\"token attr-name\">input</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1234\"</span>\n    <span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"あきらかに文字数オーバーの名前あきらかに文字数オーバーの名前あきらかに文字数オーバーの名前あきらかに文字数オーバーの名前\"</span>\n    <span class=\"token attr-name\">organizationName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"あきらかに文字数オーバーの組織名あきらかに文字数オーバーの組織名あきらかに文字数オーバーの組織名あきらかに文字数オーバーの組織名\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    person <span class=\"token punctuation\">{</span>\n      id\n      name\n      organizationName\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<p>複数エラーメッセージを含むレスポンスが返ってきます！</p>\n<div class=\"gatsby-code-title\">複数エラーメッセージを含むレスポンス</div>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"updatePerson\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"person\"</span><span class=\"token punctuation\">:</span> null\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"errors\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token string\">\"updatePerson\"</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> null<span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"errorType\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"errorInfo\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"あきらかに文字数オーバーの名前あきらかに文字数オーバーの名前あきらかに文字数オーバーの名前あきらかに文字数オーバーの名前\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"locations\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">{</span>\n</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token string\">\"line\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token string\">\"column\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token string\">\"sourceName\"</span><span class=\"token punctuation\">:</span> null\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"名前は30文字以下で入力してください。\"</span>\n</span>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"path\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token string\">\"updatePerson\"</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span> null<span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"errorType\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"organizationName\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"errorInfo\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"あきらかに文字数オーバーの組織名あきらかに文字数オーバーの組織名あきらかに文字数オーバーの組織名あきらかに文字数オーバーの組織名\"</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"locations\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">{</span>\n</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token string\">\"line\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token string\">\"column\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">          <span class=\"token string\">\"sourceName\"</span><span class=\"token punctuation\">:</span> null\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token punctuation\">}</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token string\">\"message\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"組織名は30文字以下で入力してください。\"</span>\n</span>    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h2 id=\"結論に至るまでの試行錯誤\"><a href=\"#%E7%B5%90%E8%AB%96%E3%81%AB%E8%87%B3%E3%82%8B%E3%81%BE%E3%81%A7%E3%81%AE%E8%A9%A6%E8%A1%8C%E9%8C%AF%E8%AA%A4\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>結論に至るまでの試行錯誤</h2>\n<p><a href=\"https://docs.aws.amazon.com/ja_jp/appsync/latest/devguide/resolver-util-reference.html\">AppSyncの公式ドキュメント</a>を見ると、<code class=\"language-text\">$util.appendError</code>が使えそうだと思ったのですが、いざ書こうとすると、以下2点につまづきました。</p>\n<ol>\n<li>「1つ以上入力チェックエラーがある」ことをどうやって判定するのか</li>\n<li>複数エラー情報をどうやってレスポンスとして返すのか</li>\n</ol>\n<h3 id=\"1-「1つ以上入力チェックエラーがある」ことをどうやって判定するのか\"><a href=\"#1-%E3%80%8C1%E3%81%A4%E4%BB%A5%E4%B8%8A%E5%85%A5%E5%8A%9B%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%82%E3%82%8B%E3%80%8D%E3%81%93%E3%81%A8%E3%82%92%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%A6%E5%88%A4%E5%AE%9A%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8B\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 「1つ以上入力チェックエラーがある」ことをどうやって判定するのか</h3>\n<p>最初に考えたのは、<code class=\"language-text\">#set($valid=true)</code>のようにフラグで判断する方法です。</p>\n<div class=\"gatsby-code-title\">validフラグで判定する方法</div>\n<div class=\"gatsby-highlight\" data-language=\"velocity\"><pre class=\"language-velocity\"><code class=\"language-velocity\"><span class=\"gatsby-highlight-code-line\"><span class=\"token velocity-comment comment\">## 事前にフラグを定義しておく</span>\n</span><span class=\"gatsby-highlight-code-line\"><span class=\"token directive\"><span class=\"token keyword\">#set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$valid</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></span>\n</span>\n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span>$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token velocity-comment comment\">## チェックNGの場合はフラグを更新</span>\n</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token directive\"><span class=\"token keyword\">#set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$valid</span><span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></span>\n</span>  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名前は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></span>\n<span class=\"token directive\"><span class=\"token keyword\">#end</span></span> \n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></span>)\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token directive\"><span class=\"token keyword\">#set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$valid</span><span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></span>\n</span>  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名前は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></span>\n<span class=\"token directive\"><span class=\"token keyword\">#end</span></span>\n\n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span>$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span></span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token directive\"><span class=\"token keyword\">#set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$valid</span><span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></span>\n</span>  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"組織名は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"organizationName\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">)</span></span>\n<span class=\"token directive\"><span class=\"token keyword\">#end</span></span> \n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></span>)\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token directive\"><span class=\"token keyword\">#set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$valid</span><span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></span>\n</span>  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"組織名は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"organizationName\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">)</span></span>\n<span class=\"token directive\"><span class=\"token keyword\">#end</span></span>\n\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$valid</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></span>\n</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token velocity-comment comment\">## 異常時の処理</span>\n</span><span class=\"gatsby-highlight-code-line\"><span class=\"token directive\"><span class=\"token keyword\">#end</span></span>\n</span></code></pre></div>\n<br/>\n<p>ただこれだと記述が冗長です。<br/>\nappendErrorしたエラーはどこに格納されているのか？<br/>\n<code class=\"language-text\">$util.error($util.toJson($context))</code>をして<code class=\"language-text\">$context</code>の中身を確認してみると、\nどうやら<code class=\"language-text\">$context.outErrors</code>に格納されているということがわかりました。<br/>\nそれを踏まえて処理を以下のようにリファクタリングしました。</p>\n<div class=\"gatsby-code-title\">validフラグを使わずに判定する方法</div>\n<div class=\"gatsby-highlight\" data-language=\"velocity\"><pre class=\"language-velocity\"><code class=\"language-velocity\"><span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span>$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名前は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></span>\n<span class=\"token directive\"><span class=\"token keyword\">#end</span></span> \n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></span>)\n  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"名前は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></span>\n<span class=\"token directive\"><span class=\"token keyword\">#end</span></span>\n\n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">isNullOrBlank</span><span class=\"token punctuation\">(</span>$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"組織名は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"organizationName\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">)</span></span>\n<span class=\"token directive\"><span class=\"token keyword\">#end</span></span> \n<span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token operator\">></span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></span>)\n  <span class=\"token variable\">$util<span class=\"token punctuation\">.</span><span class=\"token function\">appendError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"組織名は30文字以下で入力してください。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"organizationName\"</span><span class=\"token punctuation\">,</span> null<span class=\"token punctuation\">,</span> $ctx<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>organizationName<span class=\"token punctuation\">)</span></span>\n<span class=\"token directive\"><span class=\"token keyword\">#end</span></span>\n\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token directive\"><span class=\"token keyword\">#if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>outErrors<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span>\n</span><span class=\"gatsby-highlight-code-line\">  <span class=\"token velocity-comment comment\">## 異常時の処理</span>\n</span><span class=\"gatsby-highlight-code-line\"><span class=\"token directive\"><span class=\"token keyword\">#end</span></span>\n</span></code></pre></div>\n<br/>\n<h3 id=\"2-複数エラー情報をどうやってレスポンスとして返すのか\"><a href=\"#2-%E8%A4%87%E6%95%B0%E3%82%A8%E3%83%A9%E3%83%BC%E6%83%85%E5%A0%B1%E3%82%92%E3%81%A9%E3%81%86%E3%82%84%E3%81%A3%E3%81%A6%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%81%A8%E3%81%97%E3%81%A6%E8%BF%94%E3%81%99%E3%81%AE%E3%81%8B\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 複数エラー情報をどうやってレスポンスとして返すのか</h3>\n<p><code class=\"language-text\">$util.appendError</code>はエラーを追加してくれるだけです。<code class=\"language-text\">$util.error</code>は1つのエラー情報しか返してくれません。<br/>\n試行錯誤した結果、<code class=\"language-text\">#return</code>で返せそうだということがわかりました。<br/>\n1の調査結果により<code class=\"language-text\">$util.appendError</code>で詰めたエラー情報は<code class=\"language-text\">$ctx.outErrors</code>に格納されていることがわかっていたので、\nそれら踏まえて以下のようにしました。</p>\n<div class=\"gatsby-code-title\">エラー時に複数エラーメッセージを返すにはreturnを使う</div>\n<div class=\"gatsby-highlight\" data-language=\"velocity\"><pre class=\"language-velocity\"><code class=\"language-velocity\">  <span class=\"token directive\"><span class=\"token keyword\">#return</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctx<span class=\"token punctuation\">.</span>outErrors</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n<br/>\n<h2 id=\"まとめ\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>VLTは結構めんどくさいですが、ちょっとずつ慣れてきました。\nググってもAppSyncのVTL系の情報は、まだあまり見かけません。そのため今後もノウハウがたまったら記事を書きます🍅</p>","headingsDetail":[{"id":"なにこれ","value":"なにこれ","depth":2,"parents":[]},{"id":"結論","value":"結論","depth":2,"parents":[]},{"id":"実際どのようなレスポンスが返ってくるか","value":"実際どのようなレスポンスが返ってくるか","depth":2,"parents":[]},{"id":"結論に至るまでの試行錯誤","value":"結論に至るまでの試行錯誤","depth":2,"parents":[]},{"id":"1-「1つ以上入力チェックエラーがある」ことをどうやって判定するのか","value":"1. 「1つ以上入力チェックエラーがある」ことをどうやって判定するのか","depth":3,"parents":[{"id":"結論に至るまでの試行錯誤","value":"結論に至るまでの試行錯誤","depth":2}]},{"id":"2-複数エラー情報をどうやってレスポンスとして返すのか","value":"2. 複数エラー情報をどうやってレスポンスとして返すのか","depth":3,"parents":[{"id":"結論に至るまでの試行錯誤","value":"結論に至るまでの試行錯誤","depth":2}]},{"id":"まとめ","value":"まとめ","depth":2,"parents":[]}],"fields":{"title":"AWS AppSyncで入力チェックエラーを複数返す方法","excerpt":"なにこれAppSyncのリゾルバーでDynamoDBのデータを更新する場合、更新処理の前に入力チェックは必ず実施すると思います。この時、入力チェックエラーを見つけた時点で1つのエラーメッセージを返すより、すべてのチェック実施後にまとめてエラ...","date":"2019-02-26T07:30:00.000+09:00","tags":["AppSync","AWS","GraphQL"],"thumbnail":"/thumbnail/2019/02/mutliple-validation-errors-in-aws-appsync.png"}}},"pageContext":{"slug":"/mutliple-validation-errors-in-aws-appsync","relatedPosts":[{"fields":{"slug":"/aws-appsync-and-serverless-framework","title":"AppSync + Serverless Frameworkによるソースコードの構成管理","date":"2019-03-04T07:50:00.000+09:00","excerpt":"なにこれAWSのGraphQLマネージドサービス「AppSync」はGUIで簡単に設定ができて便利ですが、本格的に開発を進めていくとGUIポチポチでソースコードを管理するのはつらくなってきます。Serverless Frameworkという...","tags":["AppSync","serverless","AWS","GraphQL"],"keywords":["AppSync"],"thumbnail":"/thumbnail/2019/03/aws-appsync-and-serverless-framework.png"}},{"fields":{"slug":"/aws-appsync-pipeline-resolver-with-multiple-dynamodb-tables","title":"AWS AppSyncのPipeline Resolverで複数データリソースを扱う場合のVTLの書き方","date":"2019-02-19T07:30:00.000+09:00","excerpt":"なにこれAWSのGraphQLフルマネージドサービス「AppSync」で複数のデータリソースを扱う場合は「Pipeline Resolver」という機能を使います。これは、1つのデータリソースを扱うファンクションを定義し、それらを組み合わせ...","tags":["AppSync","AWS","GraphQL","DynamoDB"],"keywords":["GraphQL"],"thumbnail":"/thumbnail/2019/02/aws-appsync-pipeline-resolver-with-multiple-dynamodb-tables.png"}},{"fields":{"slug":"/how-to-get-user-custom-attributes-in-resolver-with-amplify-appsync-cognito","title":"Amplify + Cognito + AppSyncにおいてリゾルバーでユーザのカスタム属性を取得する方法","date":"2019-04-13T07:14:40.000+09:00","excerpt":"なにこれAppSync + Cognitoにおける認可制御について以前の記事で説明しました。今回は、ユーザーのカスタム属性を使った認可制御（AppSyncのリゾルバーでカスタム属性を取得する方法）についてご紹介します。TL;DRAppSyn...","tags":["Amplify","AppSync","AWS","Cognito"],"keywords":["AWS"],"thumbnail":"/thumbnail/2019/04/how-to-get-user-custom-attributes-in-resolver-with-amplify-appsync-cognito.png"}},{"fields":{"slug":"/aws-appsync-auth-with-cognito","title":"AppSync + Cognitoによる認可制御","date":"2019-03-17T17:45:00.000+09:00","excerpt":"なにこれAppSyncはCognitoと連携して認可制御ができます。今回はそのやり方についてご紹介します。ざっくりいうと以下のようなことが実現可能です。✨スキーマ定義におけるQueryやMutationごとの認可制御（ユーザーグループ）💎...","tags":["AppSync","AWS","Cognito"],"keywords":["AWS"],"thumbnail":"/thumbnail/2019/03/aws-appsync-auth-with-cognito.png"}}],"latestPosts":[{"fields":{"slug":"/wordcloud-with-kuromoji-d3cloud-react","title":"React + kuromoji.js + D3-CloudでWordCloudをブラウザに描画","date":"2019-05-04T12:40:00.000+09:00","excerpt":"なにこれWordCloudをJSだけで生成したい。Pythonとか使わずにフロントエンドだけでやりたい。というモチベーションで、kuromoji.jsとD3-Cloudを使って文字列をインプットにWordCloudを描画するReactアプリ...","tags":["React","kuromoji.js","d3.js","d3Cloud","形態素解析","WordCloud"],"keywords":["React"],"thumbnail":"/thumbnail/2019/05/wordcloud-with-kuromoji-d3cloud-react.png"}},{"fields":{"slug":"/posts-relation-map-with-cytoscape-in-gatsby","title":"GatsbyでCytoscape.jsを使って記事関連マップを作った","date":"2019-05-01T18:00:00.000+09:00","excerpt":"なにこれ以前の記事で紹介したタグとキーワードから関連記事を算出するロジックと、Cytoscape.jsを用いて記事の関連情報を視覚的に確認できるマップを作りました。今回はそのマップの紹介とCytoscape.jsを使ってみた感想です。記事関...","tags":["Gatsby","Cytoscape.js"],"keywords":["Gatsby"],"thumbnail":"/thumbnail/2019/05/posts-relation-map-with-cytoscape-in-gatsby.png"}},{"fields":{"slug":"/vuetify-datatable-and-pagination-with-vuex","title":"VuetifyのDataTableとPaginationの状態をVuexで管理する","date":"2019-04-28T20:30:00.000+09:00","excerpt":"なにこれVuetifyのDataTableとPaginationを使った検索一覧画面でページングの状態を、ルーティングをまたいで保存しておきたい。という要望を満たすため、ページングの状態をVuexで管理する方法をメモします。DataTabl...","tags":["Vue.js","Vuetify","Vuex"],"keywords":["Vue.js"],"thumbnail":"/thumbnail/2019/04/vuetify-datatable-and-pagination-with-vuex.png"}},{"fields":{"slug":"/multi-message-snackbar-in-vuetify","title":"VuetifyのSnackbarで複数メッセージ表示する方法","date":"2019-04-21T21:30:00.000+09:00","excerpt":"なにこれVuetifyのSnackbarはメッセージを1つしか表示できません。こちらGitHubでもissueになっています。ただUIとしてはメッセージを複数表示できたほうが便利なので、今回はVuetifyのSnackbarをベースにメッセ...","tags":["Vuetify","Vue.js"],"keywords":["Vue.js"],"thumbnail":"/thumbnail/2019/04/multi-message-snackbar-in-vuetify.png"}},{"fields":{"slug":"/how-to-get-user-custom-attributes-in-resolver-with-amplify-appsync-cognito","title":"Amplify + Cognito + AppSyncにおいてリゾルバーでユーザのカスタム属性を取得する方法","date":"2019-04-13T07:14:40.000+09:00","excerpt":"なにこれAppSync + Cognitoにおける認可制御について以前の記事で説明しました。今回は、ユーザーのカスタム属性を使った認可制御（AppSyncのリゾルバーでカスタム属性を取得する方法）についてご紹介します。TL;DRAppSyn...","tags":["Amplify","AppSync","AWS","Cognito"],"keywords":["AWS"],"thumbnail":"/thumbnail/2019/04/how-to-get-user-custom-attributes-in-resolver-with-amplify-appsync-cognito.png"}}],"previous":{"fields":{"slug":"/vue-i18n-in-script-tag","title":"VueI18nをscriptタグやJSファイル内で使う方法","date":"2019-02-21T07:50:00.000+09:00","excerpt":"なにこれVueI18nはVue.jsの多言語対応ライブラリです。vueファイルのtemplateタグでは、&#x3C;p>{{$t('message.hello')}}&#x3C;/p>のように使います。ただvueファイルのscriptタグ...","tags":["Vue.js","VueI18n"],"keywords":["Vue.js"],"thumbnail":"/thumbnail/2019/02/vue-i18n-in-script-tag.png"}},"next":{"fields":{"slug":"/vuetify-and-vee-validate-and-vue-i18n","title":"Vuetify + VeeValidate + VueI18nでエラーメッセージ共通化","date":"2019-03-02T12:30:00.000+09:00","excerpt":"なにこれVuetify + VeeValidateで入力チェックする際に、VueI18nを使ってエラーメッセージを多言語対応・共通化する方法について紹介します。定義方法VeeValidateVeeValidateであらかじめ言語毎にエラーメ...","tags":["Vue.js","Vuetify","VeeValidate","VueI18n"],"keywords":["Vue.js"],"thumbnail":"/thumbnail/2019/03/vuetify-and-vee-validate-and-vue-i18n.png"}}}}