{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/post-preview/index.module.scss","webpack:///./src/components/post-list/index.module.scss","webpack:///./src/components/tag-list/index.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/tag-list/index.module.scss","webpack:///./src/components/post-preview/index.js","webpack:///./src/components/post-list/index.js"],"names":["BlogIndex","render","posts","get","this","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","props","_components_title__WEBPACK_IMPORTED_MODULE_6__","_components_post_list__WEBPACK_IMPORTED_MODULE_4__","_components_tag_list__WEBPACK_IMPORTED_MODULE_5__","React","Component","pageQuery","module","exports","content","title","title_link","meta_info","meta_info__date","meta_info__tags","TagList","tags","map","p","tagCount","_","countBy","flatten","formatted","forEach","tag_count","tag_name","push","name","count","ordered","orderBy","react__WEBPACK_IMPORTED_MODULE_5___default","className","styles","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_8__","icon","faTags","title__icon","list","t","_tag__WEBPACK_IMPORTED_MODULE_10__","key","value","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","match","e","PostPreview","post","react_default","path","gatsby_browser_entry","to","dangerouslySetInnerHTML","__html","excerpt","post_meta_info","PostList","getPosts","node","fields","slug","frontmatter","cover","date","timeToRead","post_preview"],"mappings":"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","file":"component---src-pages-index-js-7f3f0c3a4b095c988ec0.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport get from 'lodash/get'\n\nimport Layout from '../components/layout';\nimport PostList from '../components/post-list';\nimport TagList from '../components/tag-list';\nimport Title from '../components/title';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const posts = get(this, 'props.data.allMarkdownRemark.edges', []);\n\n    return (\n      <Layout location={this.props.location}>\n        <Title />\n        <PostList posts={posts} />\n        <TagList posts={posts} />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"index-module--content--1nw0C\",\"title\":\"index-module--title--2VE5f\",\"title_link\":\"index-module--title_link--1_iqR\",\"meta_info\":\"index-module--meta_info--3UW6S\",\"meta_info__date\":\"index-module--meta_info__date--10fX2\",\"meta_info__tags\":\"index-module--meta_info__tags--15SiP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"index-module--content--2f4eC\"};","import React from 'react'\nimport get from 'lodash/get'\nimport _ from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTags } from '@fortawesome/free-solid-svg-icons'\n\nimport Tag from '../tag';\nimport styles from './index.module.scss';\n\nclass TagList extends React.Component {\n  render() {\n\n    const tags = this.props.posts.map(p => get(p, 'node.frontmatter.tags', []));\n\n    const tagCount = _.countBy(_.flatten(tags));\n\n    let formatted = [];\n    _.forEach(tagCount, (tag_count, tag_name) => {\n      formatted.push({\n        name: tag_name,\n        count: tag_count\n      });\n    })\n    const ordered = _.orderBy(formatted, ['count', 'name'], ['desc', 'asc']);\n\n    return (\n      <div className={styles.content}>\n        <h4 className={styles.title}><FontAwesomeIcon icon={faTags} className={styles.title__icon}/>タグ一覧</h4>\n        <div className={styles.list}>\n          {ordered.map(t => <Tag key={t.name} value={t.name} count={t.count} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default TagList;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"index-module--content--31TcQ\",\"title\":\"index-module--title--1HiRH\",\"title__icon\":\"index-module--title__icon--3dobX\",\"list\":\"index-module--list--pEWnE\"};","import React from 'react';\nimport { Link } from 'gatsby'\n\nimport PostMetaInfo from '../post-meta-info';\nimport styles from './index.module.scss';\n\n\n\nclass PostPreview extends React.Component {\n  render() {\n    const post = this.props.post;\n\n    return (\n      <article key={post.path} className={styles.content}>\n        <h3 className={styles.title} >\n          <Link className={styles.title_link} to={post.path}>\n            {post.title}\n          </Link>\n        </h3>\n        <p dangerouslySetInnerHTML={{ __html: post.excerpt }} />\n        <PostMetaInfo post={post} />\n      </article>\n    );\n  }\n}\n\nexport default PostPreview;","\nimport React from 'react';\nimport PostPreview from '../post-preview';\n\nimport styles from './index.module.scss';\n\nclass PostList extends React.Component {\n  getPosts() {\n    return this.props.posts.map(p => {\n      return {\n        path: p.node.fields.slug,\n        tags: p.node.frontmatter.tags,\n        cover: p.node.frontmatter.cover,\n        title: p.node.frontmatter.title,\n        date: p.node.frontmatter.date,\n        excerpt: p.node.excerpt,\n        timeToRead: p.node.timeToRead\n      };\n    })\n  }\n\n  render() {\n    return (\n      <div className={styles.content}>\n        {this.getPosts().map(post => <PostPreview key={post.path} post={post}></PostPreview>)}\n      </div>\n    );\n  }\n}\n\nexport default PostList;"],"sourceRoot":""}